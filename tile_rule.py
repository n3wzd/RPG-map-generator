class Prob:

    def __init__(self, target, prob):
        self.target = target
        self.prob = prob


class Group:

    def __init__(self, target, dire):
        self.target = target
        self.dx = dire[0]
        self.dy = dire[1]


tile_size = 48  # px

# Basic Tile ID List
blank = 0
floor = 1
wall = 2
ceil = 3
water = 4  # Not Used

floor_cover = 5  # Not Used
water_cover = 6  # Not Used

# Normal Tile Rule
data_prob = {
    floor: {
        (0, 0): [
            Prob('A', 0.005),
            Prob('C', 0.002),
            Prob('D', 0.0075),
        ],
    },
    wall: {
        (0, 0): [
            Prob('E', 0.02),
        ],
        (1, 0): [
            Prob('C', 0.02),
        ],
        (-1, 0): [
            Prob('C', 0.02),
        ],
        (0, 1): [
            Prob('C', 0.02),
        ],
        (0, -1): [
            Prob('C', 0.02),
        ],
    },
}

# Group Tile Rule
data_group = {
    'A': [
        Group('B', (0, 1)),
    ],
}

# Basic Tile Rule
data_base = {
    floor: {'A', 'B', 'C', 'D'},
    wall: {'E'},
}

floor_automata = [
    [[1, 1, 1], [1, 2, 1], [1, 1, 1]],
    [[0, 1, 1], [1, 2, 1], [1, 1, 1]],
    [[1, 1, 0], [1, 2, 1], [1, 1, 1]],
    [[0, 1, 0], [1, 2, 1], [1, 1, 1]],
    [[1, 1, 1], [1, 2, 1], [1, 1, 0]],
    [[0, 1, 1], [1, 2, 1], [1, 1, 0]],
    [[1, 1, 0], [1, 2, 1], [1, 1, 0]],
    [[0, 1, 0], [1, 2, 1], [1, 1, 0]],
    [[1, 1, 1], [1, 2, 1], [0, 1, 1]],
    [[0, 1, 1], [1, 2, 1], [0, 1, 1]],
    [[1, 1, 0], [1, 2, 1], [0, 1, 1]],
    [[0, 1, 0], [1, 2, 1], [0, 1, 1]],
    [[1, 1, 1], [1, 2, 1], [0, 1, 0]],
    [[0, 1, 1], [1, 2, 1], [0, 1, 0]],
    [[1, 1, 0], [1, 2, 1], [0, 1, 0]],
    [[0, 1, 0], [1, 2, 1], [0, 1, 0]],
    [[2, 1, 1], [0, 2, 1], [2, 1, 1]],
    [[2, 1, 0], [0, 2, 1], [2, 1, 1]],
    [[2, 1, 1], [0, 2, 1], [2, 1, 0]],
    [[2, 1, 0], [0, 2, 1], [2, 1, 0]],
    [[2, 0, 2], [1, 2, 1], [1, 1, 1]],
    [[2, 0, 2], [1, 2, 1], [1, 1, 0]],
    [[2, 0, 2], [1, 2, 1], [0, 1, 1]],
    [[2, 0, 2], [1, 2, 1], [0, 1, 0]],
    [[1, 1, 2], [1, 2, 0], [1, 1, 2]],
    [[1, 1, 2], [1, 2, 0], [0, 1, 2]],
    [[0, 1, 2], [1, 2, 0], [1, 1, 2]],
    [[0, 1, 2], [1, 2, 0], [0, 1, 2]],
    [[1, 1, 1], [1, 2, 1], [2, 0, 2]],
    [[0, 1, 1], [1, 2, 1], [2, 0, 2]],
    [[1, 1, 0], [1, 2, 1], [2, 0, 2]],
    [[0, 1, 0], [1, 2, 1], [2, 0, 2]],
    [[2, 1, 2], [0, 2, 0], [2, 1, 2]],
    [[2, 0, 2], [1, 2, 1], [2, 0, 2]],
    [[2, 0, 2], [0, 2, 1], [2, 1, 1]],
    [[2, 0, 2], [0, 2, 1], [2, 1, 0]],
    [[2, 0, 2], [1, 2, 0], [1, 1, 2]],
    [[2, 0, 2], [1, 2, 0], [0, 1, 2]],
    [[1, 1, 2], [1, 2, 0], [2, 0, 2]],
    [[0, 1, 2], [1, 2, 0], [2, 0, 2]],
    [[2, 1, 1], [0, 2, 1], [2, 0, 2]],
    [[2, 1, 0], [0, 2, 1], [2, 0, 2]],
    [[2, 0, 2], [0, 2, 0], [2, 1, 2]],
    [[2, 0, 2], [0, 2, 1], [2, 0, 2]],
    [[2, 1, 2], [0, 2, 0], [2, 0, 2]],
    [[2, 0, 2], [1, 2, 0], [2, 0, 2]],
    [[2, 0, 2], [0, 2, 0], [2, 0, 2]],
    [[2, 0, 2], [0, 2, 0], [2, 0, 2]],
]
